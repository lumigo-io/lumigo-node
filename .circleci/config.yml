# Jobs here are called using API, but the API is valid only for version 2 and not for version 2.1.
# The config was auto generated by CircleCI for downgrading to version 2.
# The original config is in a comment at the bottom of this file.
# https://circleci.com/docs/2.0/api-job-trigger/ ("Note: You cannot currently trigger jobs that use 2.1 config from the API.")

# How can I convert V2.1 to V2? Write the file in V2.1, run it in CircleCI and click "Configuration".

version: 2
jobs:
  test:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: install-npm-wee
        command: npm install
    - run:
        name: install-npm-inner
        command: pushd auto-instrument-handler; npm install; popd
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
        - ./node_modules
    - run:
        name: prettier
        command: npm run prettier:ci
    - run:
        name: test
        command: npm test
    - run:
        name: eslint
        command: npm run lint
    - run:
        name: code-coverage
        command: npm test --coverage && codecov
    - store_artifacts:
        path: coverage
        prefix: coverage
  integration-test:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: deploy env
        command: ./scripts/ci_deploy.sh
    - run:
        name: npm i
        command: cd ../integration-tests && npm i
    - run:
        name: recursive-install
        command: sudo npm install -g recursive-install
    - run:
        name: prepare_env
        command: cd ../integration-tests && ./scripts/prepare_env.sh
    - run:
        name: deploy integ-test
        command: cd ../integration-tests && ./scripts/deploy.sh --spec node
    - run:
        name: run tests
        command: cd ../integration-tests && export testNode=true && npm run test
  deploy-beta:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: Check if tagged
        command: |
          tags=$(git tag -l --points-at HEAD)
          echo "Tags $tags"
          if [[ ! -z "$tags" ]]
          then
            echo "A tagged commit, skip..."
            circleci step halt
          fi
    - run:
        name: deploy beta to npm + release with delay
        command: ./scripts/bd_to_beta.sh
  deploy:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: Check if tagged
        command: |
          tags=$(git tag -l --points-at HEAD)
          echo "Tags $tags"
          if [[ ! -z "$tags" ]]
          then
            echo "A tagged commit, skip..."
            circleci step halt
          fi
    - run:
        name: deploy to npm + lambda layer
        command: ./scripts/bd_to_prod.sh
workflows:
  test-deploy:
    jobs:
    - test:
        filters:
          branches:
            ignore: master
    - integration-test:
        filters:
          branches:
            ignore: master
        requires:
        - test
    - deploy-beta:
        filters:
          branches:
            only: master
    - deploy:
        filters:
          branches:
            only: master
  version: 2

# The original config.yml file:
# version: 2.1
# defaults: &defaults
#   working_directory: ~/lumigo-node
#   docker:
#     - image: lumigo/ci:latest
#       auth:
#         username: lumigo
#         password: $DOCKERHUB_PASSWORD
#   environment:
#     TZ: \"Asia/Jerusalem\"
#
# commands:
#   checkout_utils:
#     description: \"Checkout various utilities\"
#     steps:
#       - run:
#           command: |
#             mkdir ~/.ssh/ && echo -e \"Host github.com\\n\\tStrictHostKeyChecking no\\n\" > ~/.ssh/config
#             cd ..
#             git clone git@github.com:lumigo-io/common-resources.git
#       - run:
#           command: |
#             cd ..
#             git clone git@github.com:lumigo-io/utils.git
#       - run:
#           command: |
#             cd ..
#             git clone git@github.com:lumigo-io/larn.git
#
# workflows:
#   test-deploy:
#     jobs:
#     - test:
#         filters:
#           branches:
#             ignore: master
#     - integration-test:
#         filters:
#           branches:
#             ignore: master
#         requires:
#           - test
#     - deploy-beta:
#         filters:
#           branches:
#             only: master
#     - deploy:
#         filters:
#           branches:
#             only: master
# jobs:
#   test:
#     <<: *defaults
#     steps:
#       - checkout # special step to check out source code to working directory
#       - restore_cache:
#           key: dependency-cache-{{ checksum \"package.json\" }}
#       - run:
#           name: install-npm-wee
#           command: npm install
#       - run:
#           name: install-npm-inner
#           command: pushd auto-instrument-handler; npm install; popd
#       - save_cache:
#           key: dependency-cache-{{ checksum \"package.json\" }}
#           paths:
#             - ./node_modules
#       - run:
#           name: prettier
#           command: npm run prettier:ci
#       - run:
#           name: test
#           command: npm test
#       - run:
#           name: eslint
#           command: npm run lint
#       - run:
#           name: code-coverage
#           command: npm test --coverage && codecov
#       - store_artifacts:
#           path: coverage
#           prefix: coverage
#   integration-test:
#     <<: *defaults
#     steps:
#       - checkout_utils
#       - checkout
#       - run:
#           name: deploy env
#           command: ./scripts/ci_deploy.sh
#       - run:
#           name: npm i
#           command: cd ../integration-tests && npm i
#       - run:
#           name: recursive-install
#           command: sudo npm install -g recursive-install
#       - run:
#           name: prepare_env
#           command: cd ../integration-tests && ./scripts/prepare_env.sh
#       - run:
#           name: deploy integ-test
#           command: cd ../integration-tests && ./scripts/deploy.sh --spec node
#       - run:
#           name: run tests
#           command: cd ../integration-tests && export testNode=true && npm run test
#   deploy-beta:
#     <<: *defaults
#     steps:
#       - checkout_utils
#       - checkout
#       - run:
#             # Avoid annoying double runs after deploy.
#             # See https://discuss.circleci.com/t/job-runs-even-when-tags-ignore-filter-is-triggered-when-combined-with-branches-only/20664
#             name: Check if tagged
#             command: |
#               tags=$(git tag -l --points-at HEAD)
#               echo \"Tags $tags\"
#               if [[ ! -z \"$tags\" ]]
#               then
#                 echo \"A tagged commit, skip...\"
#                 circleci step halt
#               fi
#       - run:
#           name: deploy beta to npm + release with delay
#           command: ./scripts/bd_to_beta.sh
#   deploy:
#     <<: *defaults
#     steps:
#       - checkout_utils
#       - checkout
#       - run:
#             # Avoid annoying double runs after deploy.
#             # See https://discuss.circleci.com/t/job-runs-even-when-tags-ignore-filter-is-triggered-when-combined-with-branches-only/20664
#             name: Check if tagged
#             command: |
#               tags=$(git tag -l --points-at HEAD)
#               echo \"Tags $tags\"
#               if [[ ! -z \"$tags\" ]]
#               then
#                 echo \"A tagged commit, skip...\"
#                 circleci step halt
#               fi
#       - run:
#           name: deploy to npm + lambda layer
#           command: ./scripts/bd_to_prod.sh