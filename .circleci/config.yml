version: 2.1

orbs:
  lumigo-orb: &lumigo_orb_version lumigo/lumigo-orb@volatile

defaults: &defaults
  docker:
    - image: lumigo/ci-ubuntu2204:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD

workflows:
  test-deploy:
    jobs:
    - lumigo-orb/print_orb_versions:
        lumigo_orb_version: *lumigo_orb_version

    - test:
        context: common
        filters:
          branches:
            ignore: master

    - lumigo-orb/is_environment_available:
        context: common
        filters:
          branches:
            ignore: master

    - lumigo-orb/be-deploy:
        context: common
        requires:
          - lumigo-orb/is_environment_available

    - lumigo-orb/integration-test-prep:
        context: common
        deploy_spec: node
        run_test_cleanup: false
        requires:
          - lumigo-orb/be-deploy

    - lumigo-orb/integration-test-cleanup:
        name: pre-test-cleanup
        context: common
        requires:
          - lumigo-orb/integration-test-prep

    - lumigo-orb/integration-test-limited-flows:
        context: common
        deploy_spec: node
        run_test_cleanup: false
        tests_spec: testNode
        requires:
          - pre-test-cleanup

    - lumigo-orb/integration-test-parallel:
        context: common
        deploy_spec: node
        run_test_cleanup: false
        tests_spec: testNode
        requires:
          - lumigo-orb/integration-test-limited-flows

    - lumigo-orb/integration-test-cleanup:
        name: post-test-cleanup
        context: common
        requires:
          - lumigo-orb/integration-test-parallel

    - lumigo-orb/workflow-completed-successfully:
        context: common
        requires:
          - test
          - lumigo-orb/integration-test-parallel

    - deploy:
        context:
          - common
          - node.js
        filters:
          branches:
            only: master

jobs:
  test:
    <<: *defaults
    environment:
      - TZ: Asia/Jerusalem
      - NODE_OPTIONS: --max_old_space_size=1500
    resource_class: medium+
    working_directory: ~/lumigo-node
    steps:
    - checkout
    - run:
        name: install npm dependencies
        command: npm install
    - run:
        name: install-npm-inner
        command: |
          pushd auto-instrument-handler
            npm install
          popd
    - run:
        name: prettier
        command: npm run prettier:ci
    - run:
        name: check types
        command: npm run check-types
    - run:
        name: test
        command: npm test
    - run:
        name: eslint
        command: npm run lint
    - run:
        name: code-coverage
        command: npm test --coverage && codecov
    - store_artifacts:
        path: coverage
        prefix: coverage

  deploy:
    <<: *defaults
    environment:
      - TZ: Asia/Jerusalem
    resource_class: medium+
    working_directory: ~/lumigo-node
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: Check if tagged
        command: |
          tags=$(git tag -l --points-at HEAD)
          echo "Tags $tags"
          if [[ ! -z "$tags" ]]
          then
            echo "A tagged commit, skip..."
            circleci step halt
          fi
    - run:
        name: deploy to npm + lambda layer
        command: ./scripts/bd_to_prod.sh
