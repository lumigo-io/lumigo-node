# Jobs here are called using API, but the API is valid only for version 2 and not for version 2.1.
# The config was auto generated by CircleCI for downgrading to version 2.
# The original config is in a comment at the bottom of this file.
# https://circleci.com/docs/2.0/api-job-trigger/ ("Note: You cannot currently trigger jobs that use 2.1 config from the API.")

# How can I convert V2.1 to V2? Write the file in V2.1, run it in CircleCI and click "Configuration".

version: 2
commands:

jobs:
  test:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    - NODE_OPTIONS: --max_old_space_size=1500
    resource_class: small
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: install-npm-wee
        command: npm install
    - run:
        name: install-npm-inner
        command: pushd auto-instrument-handler; npm install; popd
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
        - ./node_modules
    - run:
        name: prettier
        command: npm run prettier:ci
    - run:
        name: test
        command: npm test
    - run:
        name: eslint
        command: npm run lint
    - run:
        name: code-coverage
        command: npm test --coverage && codecov
    - store_artifacts:
        path: coverage
        prefix: coverage
  integration-test:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
      - TZ: Asia/Jerusalem
      - NODE_OPTIONS: --max_old_space_size=4096
    resource_class: medium+      
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: deploy env
        command: ./scripts/ci_deploy.sh
    - run:
        name: npm i
        command: cd ../integration-tests && npm i
    - run:
        name: recursive-install
        command: sudo npm install -g recursive-install
    - run: cd ../integration-tests && git rev-parse HEAD > ../commits && cd ../python_tracer && git rev-parse HEAD >> ../commits &&  cd ../lumigo-node && git rev-parse HEAD >> ../commits &&  cd ../java-tracer && git rev-parse HEAD >> ../commits
    - restore_cache:
        keys:
          - IT-{{ .Branch }}-{{ checksum "../commits" }}
    - run: cd ../integration-tests && ./scripts/parallel_prepare_env.sh
    - run: cd ../integration-tests && ./scripts/parallel_deploy.sh --spec node
    - save_cache:
        key: IT-{{ .Branch }}-{{ checksum "../commits" }}
        paths:
          - ../integration-tests/src/e2e-test/cypress.env.json
          - ../integration-tests/src/e2e-test/cypress/cf-stack.json
          - ../integration-tests/.env
          - ../integration-tests/.env2
          - ../integration-tests/.env3
          - ../integration-tests/.deployment_finished.env
          - ../integration-tests/.deployment_finished.env2
          - ../integration-tests/.deployment_finished.env3 
    - run:
        name: run tests
        command: cd ../integration-tests && export testNode=true && npm run test-parallel
    - store_test_results:
          path: ../integration-tests/src/test/test-results
    - run: mkdir -p ../envs && cd ../integration-tests && cp src/e2e-test/cypress.env.json ../envs
    - run: mkdir -p ../stack && cd ../integration-tests && cp src/e2e-test/cypress/cf-stack.json ../stack
    - persist_to_workspace:
        root: ../
        paths:
          - envs/
          - stack/
          - .aws/
  e2e-test:
    working_directory: ~/lumigo-node
    docker:
      - image: lumigo/ci:latest
        auth:
          username: lumigo
          password: $DOCKERHUB_PASSWORD
    steps:
      - attach_workspace:
          at: ../
      - run:
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            cd ..
            git clone git@github.com:lumigo-io/common-resources.git
            git clone git@github.com:lumigo-io/utils.git
            git clone git@github.com:lumigo-io/integration-tests.git
            git clone git@github.com:lumigo-io/dashboard.git
      - run: mv ~/.aws/credentials tmp && { echo '[default]' ; echo 'region=us-west-2' ; cat tmp; } > ~/.aws/credentials
      - run: cat ../envs/cypress.env.json
      - run: cd ../integration-tests && cp ../envs/cypress.env.json ./src/e2e-test/
      - run: cd ../integration-tests && cp ../stack/cf-stack.json ./src/e2e-test/cypress/
      - run: cd ../dashboard && npm i
      - run: cd ../dashboard && ./scripts/prepare_env.sh --profile $(cat ~/envs/cypress.env.json | jq -r '.PROFILE_NAME') --env $(cat ~/envs/cypress.env.json | jq -r '.ENV')
      - run: cd ../integration-tests/src/e2e-test && npm i
      - run: (cd ../dashboard && npm start) & (cd ~/integration-tests && ./src/e2e-test/node_modules/.bin/wait-on http://127.0.0.1:3000 && npm run cypress:run)
      - store_artifacts:
          path: ~/integration-tests/src/e2e-test/cypress/videos
      - store_artifacts:
          path: ~/integration-tests/src/e2e-test/cypress/cf-stack.json
      - store_artifacts:
          path: ~/integration-tests/src/e2e-test/mochawesome-report
  deploy-beta:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    resource_class: small
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: Check if tagged
        command: |
          tags=$(git tag -l --points-at HEAD)
          echo "Tags $tags"
          if [[ ! -z "$tags" ]]
          then
            echo "A tagged commit, skip..."
            circleci step halt
          fi
    - run:
        name: deploy beta to npm + release with delay
        command: ./scripts/bd_to_beta.sh
  deploy:
    working_directory: ~/lumigo-node
    docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
    environment:
    - TZ: Asia/Jerusalem
    resource_class: small
    steps:
    - run:
        command: |
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          cd ..
          git clone git@github.com:lumigo-io/common-resources.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/utils.git
    - run:
        command: |
          cd ..
          git clone git@github.com:lumigo-io/larn.git
    - checkout
    - run:
        name: Check if tagged
        command: |
          tags=$(git tag -l --points-at HEAD)
          echo "Tags $tags"
          if [[ ! -z "$tags" ]]
          then
            echo "A tagged commit, skip..."
            circleci step halt
          fi
    - run:
        name: deploy to npm + lambda layer
        command: ./scripts/bd_to_prod.sh
workflows:
  test-deploy:
    jobs:
    - test:
        filters:
          branches:
            ignore: master
    - integration-test:
        filters:
          branches:
            ignore: master
        requires:
        - test
    - e2e-test:
        requires:
          - integration-test
        filters:
          branches:
            ignore: master
    - deploy-beta:
        filters:
          branches:
            only: master
  version: 2
